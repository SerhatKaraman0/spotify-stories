{"ast":null,"code":"var _jsxFileName = \"/Users/user/spotify-stories/src/App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songObjects, setSongObjects] = useState([]);\n  const [songList, setSongList] = useState([]);\n  const [listInput, setListInput] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {\n      songObjects: songObjects,\n      setSongObjects: setSongObjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchSong, {\n      songObjects: songObjects,\n      setSongObjects: setSongObjects,\n      songList: songList,\n      setSongList: setSongList,\n      listInput: listInput,\n      setListInput: setListInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Profile, {\n      songList: songList,\n      setSongList: setSongList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"9zTeQyHY+u96LgsEEic107kkqpY=\");\n_c = App;\nfunction Profile({\n  songList,\n  setSongList\n}) {\n  function deleteList(index) {\n    const updatedList = [...songList];\n    updatedList.splice(index, 1);\n    setSongList(updatedList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 53\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          className: \"g-4\",\n          children: songList.map((songObj, idx) => {\n            var _songObj$, _songObj$$album, _songObj$$album$image;\n            return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: (_songObj$ = songObj[0]) === null || _songObj$ === void 0 ? void 0 : (_songObj$$album = _songObj$.album) === null || _songObj$$album === void 0 ? void 0 : (_songObj$$album$image = _songObj$$album.images[1]) === null || _songObj$$album$image === void 0 ? void 0 : _songObj$$album$image.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: songObj.listName !== \"\" ? songObj.listName : \"Some random list \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 51,\n                    columnNumber: 15\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: () => deleteList(idx),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 15\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 11\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 9\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_c2 = Profile;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Profile\");","map":{"version":3,"names":["Card","Col","Row","Form","Button","Container","Nav","Navbar","NavDropdown","useState","useEffect","jsxDEV","_jsxDEV","App","_s","songObjects","setSongObjects","songList","setSongList","listInput","setListInput","className","children","NavBar","fileName","_jsxFileName","lineNumber","columnNumber","MainContent","SearchSong","Profile","_c","deleteList","index","updatedList","splice","style","textAlign","xs","md","map","songObj","idx","_songObj$","_songObj$$album","_songObj$$album$image","Img","variant","src","album","images","url","Body","Title","listName","onClick","_c2","$RefreshReg$"],"sources":["/Users/user/spotify-stories/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Nav from 'react-bootstrap/Nav';\nimport Navbar from 'react-bootstrap/Navbar';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n  const [songObjects, setSongObjects] = useState([]);\n  const [songList, setSongList] = useState([]);\n  const [listInput, setListInput] = useState(\"\");\n\n  return (\n    <div className=\"App\">\n      <NavBar />\n      <MainContent songObjects={songObjects} setSongObjects={setSongObjects}/>\n      <SearchSong songObjects={songObjects} setSongObjects={setSongObjects} songList={songList} setSongList={setSongList} listInput={listInput} setListInput={setListInput}/>\n      <Profile songList={songList} setSongList={setSongList}/>\n    </div>\n  );\n}\n\n\nfunction Profile({ songList, setSongList}){\n\n  function deleteList(index){\n    const updatedList = [...songList]\n    updatedList.splice(index, 1)\n    setSongList(updatedList)\n  }\n\n  return (\n    <div>\n      <h2 style={{textAlign:'center'}} >Profile</h2><br/>\n      <div>\n      <div className=\"cards\">\n      <Row xs={1} md={2} className=\"g-4\">\n      {songList.map((songObj, idx) => (\n        <Col key={idx}>\n          <Card>\n            <Card.Img variant=\"top\" src={songObj[0]?.album?.images[1]?.url} />\n            <Card.Body>\n              <Card.Title>{songObj.listName !== \"\" ? songObj.listName : \"Some random list \"}</Card.Title>\n              <Button variant=\"danger\" onClick={\n                () => deleteList(idx)\n              }>Remove</Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n    </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}