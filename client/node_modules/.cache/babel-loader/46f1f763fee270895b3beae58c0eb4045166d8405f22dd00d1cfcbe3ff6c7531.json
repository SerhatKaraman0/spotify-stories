{"ast":null,"code":"var _jsxFileName = \"/Users/user/spotify-stories/src/App.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchSong, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nfunction MainContent() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: Array.from({\n        length: 4\n      }).map((_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: \"holder.js/100px160\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: \"Card title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n              children: \"Test Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MainContent;\nfunction SearchSong() {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  async function search() {\n    const songParams = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer' + accessToken\n      }\n    };\n    const songID = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', songParams).then(response => response.json()).then();\n  }\n  useEffect(() => {\n    const authParameters = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials&client_id=' + process.env.REACT_APP_CLIENT_ID + '&client_secret=' + process.env.REACT_APP_CLIENT_SECRET\n    };\n    fetch('https://accounts.spotify.com/api/token', authParameters).then(result => result.json()).then(data => setAccessToken(data.access_token));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Song Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Metallica - One\",\n          onChange: event => setSearchInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Add description to the song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          placeholder: \"Best song I've ever heard..\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: console.log(searchInput),\n        children: \"Add the song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 7\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n_s(SearchSong, \"i73f2LF5eXv/cEakeM3B67q8sdY=\");\n_c3 = SearchSong;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"SearchSong\");","map":{"version":3,"names":["Card","Col","Row","Form","Button","useState","useEffect","jsxDEV","_jsxDEV","App","className","children","MainContent","fileName","_jsxFileName","lineNumber","columnNumber","SearchSong","_c","xs","md","Array","from","length","map","_","idx","Img","variant","src","Body","Title","Text","_c2","_s","searchInput","setSearchInput","accessToken","setAccessToken","search","songParams","method","headers","songID","fetch","then","response","json","authParameters","body","process","env","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET","result","data","access_token","Group","controlId","Label","Control","type","placeholder","onChange","event","target","value","as","rows","onClick","console","log","_c3","$RefreshReg$"],"sources":["/Users/user/spotify-stories/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {useState, useEffect} from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <MainContent />\n      <SearchSong />\n    </div>\n  );\n}\n\nfunction MainContent() {\n  return (\n    <div className=\"cards\">\n      <Row xs={1} md={2} className=\"g-4\">\n      {Array.from({ length: 4 }).map((_, idx) => (\n        <Col key={idx}>\n          <Card>\n            <Card.Img variant=\"top\" src=\"holder.js/100px160\" />\n            <Card.Body>\n              <Card.Title>Card title</Card.Title>\n              <Card.Text>\n                Test Description\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n    </div>\n  );\n}\n\nfunction SearchSong() {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n\n  async function search(){\n    const songParams = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer' + accessToken\n      }\n    }\n    const songID = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', songParams)\n    .then(response => response.json())\n    .then()\n  }\n  useEffect(() => {\n    const authParameters = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials&client_id=' + process.env.REACT_APP_CLIENT_ID + '&client_secret=' + process.env.REACT_APP_CLIENT_SECRET\n    }\n    fetch('https://accounts.spotify.com/api/token', authParameters)\n    .then(result => result.json())\n    .then(data => setAccessToken(data.access_token))\n  }, [])\n\n  return (\n    <div>\n      <Form>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Song Name</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Metallica - One\" \n        onChange={\n          event => setSearchInput(event.target.value)}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Add description to the song</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} placeholder=\"Best song I've ever heard..\"/>\n      </Form.Group>\n      <Button variant=\"primary\" onClick={console.log(searchInput)}>Add the song</Button>{' '}\n    </Form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}