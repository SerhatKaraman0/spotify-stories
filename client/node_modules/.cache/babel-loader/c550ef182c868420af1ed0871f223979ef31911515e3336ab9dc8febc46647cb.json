{"ast":null,"code":"var _jsxFileName = \"/Users/user/spotify-stories/src/components/Profile.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile({\n  songList,\n  setSongList\n}) {\n  function deleteList(index) {\n    const updatedList = [...songList];\n    updatedList.splice(index, 1);\n    setSongList(updatedList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          className: \"g-4\",\n          children: songList.map((songObj, idx) => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                variant: \"top\",\n                src: songObj.album.images[1].url\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: songObj.listName !== \"\" ? songObj.listName : \"Some random list \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 27,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"danger\",\n                  onClick: () => deleteList(idx),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 28,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 13\n            }, this)\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Card","Col","Row","Button","jsxDEV","_jsxDEV","Profile","songList","setSongList","deleteList","index","updatedList","splice","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","className","xs","md","map","songObj","idx","Img","variant","src","album","images","url","Body","Title","listName","onClick","_c","$RefreshReg$"],"sources":["/Users/user/spotify-stories/src/components/Profile.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\n\n\nfunction Profile({ songList, setSongList}){\n\n    function deleteList(index){\n      const updatedList = [...songList]\n      updatedList.splice(index, 1)\n      setSongList(updatedList)\n    }\n  \n    return (\n      <div>\n        <h2 style={{textAlign:'center'}} >Profile</h2><br/>\n        <div>\n        <div className=\"cards\">\n        <Row xs={1} md={2} className=\"g-4\">\n        {songList.map((songObj, idx) => (\n          <Col key={idx}>\n            <Card>\n              <Card.Img variant=\"top\" src={songObj.album.images[1].url} />\n              <Card.Body>\n                <Card.Title>{songObj.listName !== \"\" ? songObj.listName : \"Some random list \"}</Card.Title>\n                <Button variant=\"danger\" onClick={\n                  () => deleteList(idx)\n                }>Remove</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n          \n        ))}\n      </Row>\n      </div>\n        </div>\n      </div>\n    );\n  }\n\nexport default Profile;"],"mappings":";AAAA,OAAO,kCAAkC;AACzC,OAAOA,IAAI,MAAM,sBAAsB;AACvC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,GAAG,MAAM,qBAAqB;AACrC,OAAOC,MAAM,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,SAASC,OAAOA,CAAC;EAAEC,QAAQ;EAAEC;AAAW,CAAC,EAAC;EAEtC,SAASC,UAAUA,CAACC,KAAK,EAAC;IACxB,MAAMC,WAAW,GAAG,CAAC,GAAGJ,QAAQ,CAAC;IACjCI,WAAW,CAACC,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;IAC5BF,WAAW,CAACG,WAAW,CAAC;EAC1B;EAEA,oBACEN,OAAA;IAAAQ,QAAA,gBACER,OAAA;MAAIS,KAAK,EAAE;QAACC,SAAS,EAAC;MAAQ,CAAE;MAAAF,QAAA,EAAE;IAAO;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAAAd,OAAA;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDd,OAAA;MAAAQ,QAAA,eACAR,OAAA;QAAKe,SAAS,EAAC,OAAO;QAAAP,QAAA,eACtBR,OAAA,CAACH,GAAG;UAACmB,EAAE,EAAE,CAAE;UAACC,EAAE,EAAE,CAAE;UAACF,SAAS,EAAC,KAAK;UAAAP,QAAA,EACjCN,QAAQ,CAACgB,GAAG,CAAC,CAACC,OAAO,EAAEC,GAAG,kBACzBpB,OAAA,CAACJ,GAAG;YAAAY,QAAA,eACFR,OAAA,CAACL,IAAI;cAAAa,QAAA,gBACHR,OAAA,CAACL,IAAI,CAAC0B,GAAG;gBAACC,OAAO,EAAC,KAAK;gBAACC,GAAG,EAAEJ,OAAO,CAACK,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC;cAAI;gBAAAf,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC5Dd,OAAA,CAACL,IAAI,CAACgC,IAAI;gBAAAnB,QAAA,gBACRR,OAAA,CAACL,IAAI,CAACiC,KAAK;kBAAApB,QAAA,EAAEW,OAAO,CAACU,QAAQ,KAAK,EAAE,GAAGV,OAAO,CAACU,QAAQ,GAAG;gBAAmB;kBAAAlB,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAa,CAAC,eAC3Fd,OAAA,CAACF,MAAM;kBAACwB,OAAO,EAAC,QAAQ;kBAACQ,OAAO,EAC9BA,CAAA,KAAM1B,UAAU,CAACgB,GAAG,CACrB;kBAAAZ,QAAA,EAAC;gBAAM;kBAAAG,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACR,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR;UAAC,GATCM,GAAG;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAUR,CAEN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACiB,EAAA,GAjCM9B,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}