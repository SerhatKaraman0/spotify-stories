{"ast":null,"code":"var _jsxFileName = \"/Users/user/spotify-stories/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [songObjects, setSongObjects] = useState([]);\n  const [descInput, setDescInput] = useState([]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MainContent, {\n      songObjects: songObjects,\n      setSongObjects: setSongObjects\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchSong, {\n      songObjects: songObjects,\n      setSongObjects: setSongObjects,\n      descInput: descInput,\n      setDescInput: setDescInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Vj8GfbO4hEhcFpVQGwMWfVL1Lng=\");\n_c = App;\nfunction MainContent({\n  songObjects,\n  setSongObjects,\n  descInput,\n  setDescInput\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      xs: 1,\n      md: 2,\n      className: \"g-4\",\n      children: songObjects.map((songObj, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: songObj.album.images[1].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n              children: songObj.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Text, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_c2 = MainContent;\nfunction SearchSong({\n  songObjects,\n  setSongObjects,\n  descInput,\n  setDescInput\n}) {\n  _s2();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  async function search() {\n    const songParams = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    };\n    const songResponse = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', songParams);\n    const songData = await songResponse.json();\n    if (songData.tracks.items.length > 0) {\n      const trackObj = songData.tracks.items[0];\n      setSongObjects(prevTracks => [...prevTracks, trackObj]);\n    } else {\n      alert(\"No results found\");\n    }\n    console.log(songObjects);\n  }\n  useEffect(() => {\n    const authParameters = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials&client_id=' + process.env.REACT_APP_CLIENT_ID + '&client_secret=' + process.env.REACT_APP_CLIENT_SECRET\n    };\n    fetch('https://accounts.spotify.com/api/token', authParameters).then(result => result.json()).then(data => setAccessToken(data.access_token));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Song Name (More accurate when you search with the artist)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Metallica - One\",\n          onChange: event => setSearchInput(descs => [...descs, event.target.value])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Add description to the song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          placeholder: \"Best song I've ever heard..\",\n          onChange: event => setDescInput(event.target.value),\n          value: descInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: search,\n        children: \"Add the song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s2(SearchSong, \"i73f2LF5eXv/cEakeM3B67q8sdY=\");\n_c3 = SearchSong;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MainContent\");\n$RefreshReg$(_c3, \"SearchSong\");","map":{"version":3,"names":["Card","Col","Row","Form","Button","useState","useEffect","jsxDEV","_jsxDEV","App","_s","songObjects","setSongObjects","descInput","setDescInput","className","children","MainContent","fileName","_jsxFileName","lineNumber","columnNumber","SearchSong","_c","xs","md","map","songObj","idx","Img","variant","src","album","images","url","Body","Title","name","Text","_c2","_s2","searchInput","setSearchInput","accessToken","setAccessToken","search","songParams","method","headers","songResponse","fetch","songData","json","tracks","items","length","trackObj","prevTracks","alert","console","log","authParameters","body","process","env","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET","then","result","data","access_token","Group","controlId","Label","Control","type","placeholder","onChange","event","descs","target","value","as","rows","onClick","_c3","$RefreshReg$"],"sources":["/Users/user/spotify-stories/src/App.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport {useState, useEffect} from 'react';\nimport './App.css';\n\n\n\nfunction App() {\n  const [songObjects, setSongObjects] = useState([]);\n  const [descInput, setDescInput] = useState([]);\n\n  return (\n    <div className=\"App\">\n      <MainContent songObjects={songObjects} setSongObjects={setSongObjects}/>\n      <SearchSong songObjects={songObjects} setSongObjects={setSongObjects} descInput={descInput} setDescInput={setDescInput}/>\n    </div>\n  );\n}\n\nfunction MainContent({songObjects, setSongObjects, descInput, setDescInput}) {\n  return (\n    <div className=\"cards\">\n      <Row xs={1} md={2} className=\"g-4\">\n      {songObjects.map((songObj, idx) => (\n        <Col key={idx}>\n          <Card>\n            <Card.Img variant=\"top\" src={songObj.album.images[1].url} />\n            <Card.Body>\n              <Card.Title>{songObj.name}</Card.Title>\n              <Card.Text>\n                {}\n              </Card.Text>\n            </Card.Body>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n    </div>\n  );\n}\n\nfunction SearchSong({songObjects, setSongObjects, descInput, setDescInput}) {\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  \n\n  async function search(){\n    const songParams = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    }\n    const songResponse = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', songParams)\n    const songData = await songResponse.json()\n\n    if (songData.tracks.items.length > 0) {\n      const trackObj = songData.tracks.items[0];\n      setSongObjects(prevTracks => [...prevTracks, trackObj])\n    } else {\n      alert(\"No results found\")\n    }\n    console.log(songObjects)\n  }\n  useEffect(() => {\n    const authParameters = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials&client_id=' + process.env.REACT_APP_CLIENT_ID + '&client_secret=' + process.env.REACT_APP_CLIENT_SECRET\n    }\n    fetch('https://accounts.spotify.com/api/token', authParameters)\n    .then(result => result.json())\n    .then(data => setAccessToken(data.access_token))\n  }, [])\n\n  return (\n    <div>\n      <Form>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n        <Form.Label>Song Name (More accurate when you search with the artist)</Form.Label>\n        <Form.Control type=\"text\" placeholder=\"Metallica - One\" \n        onChange={\n          event => setSearchInput(descs => [...descs, event.target.value])}\n        />\n      </Form.Group>\n      <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n        <Form.Label>Add description to the song</Form.Label>\n        <Form.Control as=\"textarea\" rows={3} placeholder=\"Best song I've ever heard..\"\n        onChange={\n          event => setDescInput(event.target.value)}\n          value={descInput}\n        />\n      </Form.Group>\n      <Button variant=\"primary\" onClick={search}>Add the song</Button>{' '}\n    </Form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}