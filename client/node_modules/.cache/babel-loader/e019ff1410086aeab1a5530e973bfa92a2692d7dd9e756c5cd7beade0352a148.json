{"ast":null,"code":"var _jsxFileName = \"/Users/user/spotify-stories/src/components/SearchSong.js\",\n  _s = $RefreshSig$();\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SearchSong({\n  songObjects,\n  setSongObjects,\n  songList,\n  setSongList,\n  listInput,\n  setListInput\n}) {\n  _s();\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [accessToken, setAccessToken] = useState(\"\");\n  const [descInput, setDescInput] = useState(\"\");\n  async function search() {\n    const songParams = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + accessToken\n      }\n    };\n    const songResponse = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', songParams);\n    const songData = await songResponse.json();\n    if (songData.tracks.items.length > 0) {\n      const trackObj = songData.tracks.items[0];\n      setSongObjects(prevTracks => [...prevTracks, {\n        ...trackObj,\n        description: descInput\n      }]);\n      setSearchInput(\"\");\n      setDescInput(\"\");\n    } else {\n      alert(\"No results found\");\n    }\n    console.log(songObjects);\n  }\n  function addList() {\n    setSongList(prevList => [...prevList, {\n      songs: [...songObjects],\n      listName: listInput\n    }]);\n    setSongObjects([]);\n    setListInput(\"\");\n  }\n  useEffect(() => {\n    const authParameters = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded'\n      },\n      body: 'grant_type=client_credentials&client_id=' + process.env.REACT_APP_CLIENT_ID + '&client_secret=' + process.env.REACT_APP_CLIENT_SECRET\n    };\n    fetch('https://accounts.spotify.com/api/token', authParameters).then(result => result.json()).then(data => setAccessToken(data.access_token));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlInput1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Song Name (More accurate when you search with the artist)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Metallica - One\",\n          onChange: event => setSearchInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"exampleForm.ControlTextarea1\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Add description to the song\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          placeholder: \"Best song I've ever heard..\",\n          onChange: event => setDescInput(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"primary\",\n        onClick: search,\n        children: \"Add the song\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"success\",\n        onClick: addList,\n        children: \"Add list to profile\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), ' ', /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Name the list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Cool List\",\n        onChange: event => setListInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n_s(SearchSong, \"Bk2eWpZVhuc/rYIiJUc4YeRdHms=\");\n_c = SearchSong;\nexport default SearchSong;\nvar _c;\n$RefreshReg$(_c, \"SearchSong\");","map":{"version":3,"names":["Form","Button","useState","useEffect","jsxDEV","_jsxDEV","SearchSong","songObjects","setSongObjects","songList","setSongList","listInput","setListInput","_s","searchInput","setSearchInput","accessToken","setAccessToken","descInput","setDescInput","search","songParams","method","headers","songResponse","fetch","songData","json","tracks","items","length","trackObj","prevTracks","description","alert","console","log","addList","prevList","songs","listName","authParameters","body","process","env","REACT_APP_CLIENT_ID","REACT_APP_CLIENT_SECRET","then","result","data","access_token","children","Group","className","controlId","Label","fileName","_jsxFileName","lineNumber","columnNumber","Control","type","placeholder","onChange","event","target","value","as","rows","variant","onClick","_c","$RefreshReg$"],"sources":["/Users/user/spotify-stories/src/components/SearchSong.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\n\n\n\nfunction SearchSong({songObjects, setSongObjects, songList, setSongList, listInput, setListInput}) {\n    const [searchInput, setSearchInput] = useState(\"\");\n    const [accessToken, setAccessToken] = useState(\"\");\n    const [descInput, setDescInput] = useState(\"\");\n    \n    \n  \n    async function search(){\n      const songParams = {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + accessToken\n        }\n      }\n      const songResponse = await fetch('https://api.spotify.com/v1/search?q=' + searchInput + '&type=track', songParams)\n      const songData = await songResponse.json()\n  \n      if (songData.tracks.items.length > 0) {\n        const trackObj = songData.tracks.items[0];\n        setSongObjects(prevTracks => [...prevTracks, {...trackObj, description: descInput}])\n        setSearchInput(\"\")\n        setDescInput(\"\")\n      } else {\n        alert(\"No results found\")\n      }\n      console.log(songObjects)\n    }\n  \n    function addList(){\n      setSongList(prevList => [...prevList, {songs: [...songObjects], listName: listInput}])\n      setSongObjects([])\n      setListInput(\"\")\n    }\n  \n    useEffect(() => {\n      const authParameters = {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        body: 'grant_type=client_credentials&client_id=' + process.env.REACT_APP_CLIENT_ID + '&client_secret=' + process.env.REACT_APP_CLIENT_SECRET\n      }\n      fetch('https://accounts.spotify.com/api/token', authParameters)\n      .then(result => result.json())\n      .then(data => setAccessToken(data.access_token))\n    }, [])\n  \n    return (\n      <div>\n        <Form>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n          <Form.Label>Song Name (More accurate when you search with the artist)</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Metallica - One\" \n          onChange={\n            event => setSearchInput(event.target.value)}\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\n          <Form.Label>Add description to the song</Form.Label>\n          <Form.Control as=\"textarea\" rows={3} placeholder=\"Best song I've ever heard..\"\n          onChange={\n            event => setDescInput(event.target.value)\n          }\n          />\n        </Form.Group>\n        <Button variant=\"primary\" onClick={search}>Add the song</Button>{' '}\n        <Button variant=\"success\" onClick={addList}>Add list to profile</Button>{' '}\n        <Form.Label>Name the list</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Cool List\" \n          onChange={\n            event => setListInput(event.target.value)}\n          />\n      </Form>\n      </div>\n    );\n  }\n  \nexport default SearchSong;  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}