{"ast":null,"code":"var _jsxFileName = \"/Users/user/spotify-stories/src/components/Profile.js\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Profile({\n  songList,\n  setSongList\n}) {\n  function deleteList(index) {\n    const updatedList = [...songList];\n    updatedList.splice(index, 1);\n    setSongList(updatedList);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"Profile\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 55\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards\",\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          xs: 1,\n          md: 2,\n          className: \"g-4\",\n          children: songList.map((songObj, idx) => {\n            var _songObj$, _songObj$$album, _songObj$$album$image;\n            return /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n                  variant: \"top\",\n                  src: (_songObj$ = songObj[0]) === null || _songObj$ === void 0 ? void 0 : (_songObj$$album = _songObj$.album) === null || _songObj$$album === void 0 ? void 0 : (_songObj$$album$image = _songObj$$album.images[1]) === null || _songObj$$album$image === void 0 ? void 0 : _songObj$$album$image.url\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 25,\n                  columnNumber: 15\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                    children: songObj.listName !== \"\" ? songObj.listName : \"Some random list \"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 27,\n                    columnNumber: 17\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    onClick: () => deleteList(idx),\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 28,\n                    columnNumber: 17\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 26,\n                  columnNumber: 15\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 24,\n                columnNumber: 13\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 11\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 7\n  }, this);\n}\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["Card","Col","Row","Button","jsxDEV","_jsxDEV","Profile","songList","setSongList","deleteList","index","updatedList","splice","children","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","className","xs","md","map","songObj","idx","_songObj$","_songObj$$album","_songObj$$album$image","Img","variant","src","album","images","url","Body","Title","listName","onClick","_c","$RefreshReg$"],"sources":["/Users/user/spotify-stories/src/components/Profile.js"],"sourcesContent":["import 'bootstrap/dist/css/bootstrap.css';\nimport Card from 'react-bootstrap/Card';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport Button from 'react-bootstrap/Button';\nimport './App.css';\n\nfunction Profile({ songList, setSongList}){\n\n    function deleteList(index){\n      const updatedList = [...songList]\n      updatedList.splice(index, 1)\n      setSongList(updatedList)\n    }\n  \n    return (\n      <div>\n        <h2 style={{textAlign:'center'}} >Profile</h2><br/>\n        <div>\n        <div className=\"cards\">\n        <Row xs={1} md={2} className=\"g-4\">\n        {songList.map((songObj, idx) => (\n          <Col key={idx}>\n            <Card>\n              <Card.Img variant=\"top\" src={songObj[0]?.album?.images[1]?.url} />\n              <Card.Body>\n                <Card.Title>{songObj.listName !== \"\" ? songObj.listName : \"Some random list \"}</Card.Title>\n                <Button variant=\"danger\" onClick={\n                  () => deleteList(idx)\n                }>Remove</Button>\n              </Card.Body>\n            </Card>\n          </Col>\n        ))}\n      </Row>\n      </div>\n        </div>\n      </div>\n    );\n  }\n\nexport default Profile;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}